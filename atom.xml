<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hubert&#39;s Blog</title>
  
  <subtitle> Hubert爱猫爱生活</subtitle>
  <link href="https://hubertwongcn.github.io/atom.xml" rel="self"/>
  
  <link href="https://hubertwongcn.github.io/"/>
  <updated>2023-12-27T19:10:32.000Z</updated>
  <id>https://hubertwongcn.github.io/</id>
  
  <author>
    <name>Hubert Wong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>26.数据挖掘 - 10大算法汇总</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/26-shu-ju-wa-jue-10-da-suan-fa-hui-zong/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/26-shu-ju-wa-jue-10-da-suan-fa-hui-zong/</id>
    <published>2023-12-27T19:10:32.000Z</published>
    <updated>2023-12-27T19:10:32.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;国际权威的学术组织the IEEE International Conference on Data Mining (ICDM) 2006年12月评选出了数据挖掘领域的十大经典算法: C4.5, k-Means, SVM, Apriori,</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据挖掘算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据挖掘算法" scheme="https://hubertwongcn.github.io/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>25.推荐算法 - 汇总</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/25-tui-jian-suan-fa-hui-zong/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/25-tui-jian-suan-fa-hui-zong/</id>
    <published>2023-12-27T19:07:56.000Z</published>
    <updated>2023-12-27T19:07:56.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要对推荐算法整体知识点做汇总，做到总体的理解；深入理解需要再看专业的材料。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;推荐算法的意义&quot;&gt;&lt;a href=&quot;#推荐算法的意义&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="推荐算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="推荐算法" scheme="https://hubertwongcn.github.io/tags/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>24.负载均衡算法 - 汇总</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/24-fu-zai-jun-heng-suan-fa-hui-zong/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/24-fu-zai-jun-heng-suan-fa-hui-zong/</id>
    <published>2023-12-27T19:06:10.000Z</published>
    <updated>2023-12-27T19:06:10.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要介绍常用的负载均衡算法和Nginx中支持的负载均衡算法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;常见的负载均衡算法&quot;&gt;&lt;a href=&quot;#常见的负载均衡算法&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="负载均衡算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="负载均衡算法" scheme="https://hubertwongcn.github.io/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>23.分布式算法 - Snowflake算法</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/23-fen-bu-shi-suan-fa-snowflake-suan-fa/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/23-fen-bu-shi-suan-fa-snowflake-suan-fa/</id>
    <published>2023-12-27T19:04:46.000Z</published>
    <updated>2023-12-27T19:04:46.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Snowflake，雪花算法是由Twitter开源的分布式ID生成算法，以划分命名空间的方式将</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="Snowflake算法" scheme="https://hubertwongcn.github.io/tags/Snowflake%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>22.分布式算法 - ZAB算法</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/22-fen-bu-shi-suan-fa-zab-suan-fa/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/22-fen-bu-shi-suan-fa-zab-suan-fa/</id>
    <published>2023-12-27T19:01:42.000Z</published>
    <updated>2023-12-27T19:01:42.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;ZAB 协议全称：Zookeeper Atomic Broadcast（Zookeeper 原子广播协议）, 它应该是所有一致性协议中生产环境中应用最多的了。为什么呢？因为它是为 Zookeeper</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="ZAB算法" scheme="https://hubertwongcn.github.io/tags/ZAB%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>21.分布式算法-Gossip 协议详解</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/21-fen-bu-shi-suan-fa-gossip-xie-yi-xiang-jie/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/21-fen-bu-shi-suan-fa-gossip-xie-yi-xiang-jie/</id>
    <published>2023-12-27T18:57:31.000Z</published>
    <updated>2023-12-27T18:57:31.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;于是，&lt;strong&gt;分散式发散消息&lt;/strong&gt; 的 &lt;strong&gt;Gossip 协议&lt;/strong&gt; 就诞生了。&lt;/p&gt;
&lt;h2 id=&quot;Gossip-协议介绍&quot;&gt;&lt;a href=&quot;#Gossip-协议介绍&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="Gossip" scheme="https://hubertwongcn.github.io/tags/Gossip/"/>
    
  </entry>
  
  <entry>
    <title>20.分布式算法 - Raft算法</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/20-fen-bu-shi-suan-fa-raft-suan-fa/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/20-fen-bu-shi-suan-fa-raft-suan-fa/</id>
    <published>2023-12-27T18:49:38.000Z</published>
    <updated>2023-12-27T18:49:38.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Paxos是出了名的难懂，而Raft正是为了探索一种更易于理解的一致性算法而产生的。它的首要设计目的就是易于理解，所以在选主的冲突处理等方式上它都选择了非常简单明了的解决方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="Raft算法" scheme="https://hubertwongcn.github.io/tags/Raft%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>19.分布式算法 - Paxos算法</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/19-fen-bu-shi-suan-fa-paxos-suan-fa/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/19-fen-bu-shi-suan-fa-paxos-suan-fa/</id>
    <published>2023-12-27T18:45:58.000Z</published>
    <updated>2023-12-27T18:45:58.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Paxos算法是Lamport宗师提出的一种基于消息传递的分布式一致性算法，使其获得2013年图灵奖。自Paxos问世以来就持续垄断了分布式一致性算法，Paxos这个名词几乎等同于分布式一致性,</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="Paxos算法" scheme="https://hubertwongcn.github.io/tags/Paxos%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>18.分布式算法 - 一致性Hash算法</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/18-fen-bu-shi-suan-fa-yi-zhi-xing-hash-suan-fa/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/18-fen-bu-shi-suan-fa-yi-zhi-xing-hash-suan-fa/</id>
    <published>2023-12-27T18:41:04.000Z</published>
    <updated>2023-12-27T18:40:09.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;致性Hash算法是个经典算法，Hash环的引入是为解决&lt;code&gt;单调性(Monotonicity)&lt;/code&gt;的问题；虚拟节点的引入是为了解决&lt;code&gt;平衡性(Balance)&lt;/code&gt;问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    <category term="一致性Hash算法" scheme="https://hubertwongcn.github.io/tags/%E4%B8%80%E8%87%B4%E6%80%A7Hash%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>17.分布式算法 - Overview</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/17-fen-bu-shi-suan-fa-overview/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/17-fen-bu-shi-suan-fa-overview/</id>
    <published>2023-12-27T18:40:09.000Z</published>
    <updated>2023-12-27T18:40:09.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文总结下常见的分布式算法，主要是分布式中的一致性算法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;常见的分布式算法&quot;&gt;&lt;a href=&quot;#常见的分布式算法&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="分布式算法" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>16.大数据处理 - Map &amp; Reduce</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/16-da-shu-ju-chu-li-map-reduce/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/16-da-shu-ju-chu-li-map-reduce/</id>
    <published>2023-12-27T18:38:48.000Z</published>
    <updated>2023-12-27T18:38:48.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;MapReduce是一种计算模型, 本质上是&lt;code&gt;分治/hash_map/归并排序&lt;/code&gt;这种方式在分布式下的延伸。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Map-Reduce简介&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="MapReduce" scheme="https://hubertwongcn.github.io/tags/MapReduce/"/>
    
  </entry>
  
  <entry>
    <title>15.大数据处理 - 外（磁盘文件）排序</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/15-da-shu-ju-chu-li-wai-ci-pan-wen-jian-pai-xu/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/15-da-shu-ju-chu-li-wai-ci-pan-wen-jian-pai-xu/</id>
    <published>2023-12-27T18:34:56.000Z</published>
    <updated>2023-12-27T18:34:56.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在编程珠玑中，描述了三种外部磁盘文件排序的解决方法，分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;位图排序法&lt;/strong&gt; -</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="外（磁盘文件）排序" scheme="https://hubertwongcn.github.io/tags/%E5%A4%96%EF%BC%88%E7%A3%81%E7%9B%98%E6%96%87%E4%BB%B6%EF%BC%89%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>4.MySQL - 索引(B+树)</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/4-mysql-suo-yin-b-shu/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/4-mysql-suo-yin-b-shu/</id>
    <published>2023-12-27T18:30:27.000Z</published>
    <updated>2023-12-27T18:30:27.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/xiaoxi/p/6894610.html&quot;&gt;https://www.cnblogs.com/xiaoxi/p/6894610.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;B-Tree-原理&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="数据库" scheme="https://hubertwongcn.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://hubertwongcn.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
    <category term="数据库" scheme="https://hubertwongcn.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://hubertwongcn.github.io/tags/MySQL/"/>
    
    <category term="索引" scheme="https://hubertwongcn.github.io/tags/%E7%B4%A2%E5%BC%95/"/>
    
    <category term="B+树" scheme="https://hubertwongcn.github.io/tags/B-%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>14.大数据处理 - Trie树/数据库/倒排索引</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/14-da-shu-ju-chu-li-trie-shu-shu-ju-ku-dao-pai-suo-yin/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/14-da-shu-ju-chu-li-trie-shu-shu-ju-ku-dao-pai-suo-yin/</id>
    <published>2023-12-27T18:27:27.000Z</published>
    <updated>2023-12-27T18:27:27.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;大数据处理处理思想之 Trie树/数据库/倒排索引, 本文主要梳理下思路。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Trie树&quot;&gt;&lt;a href=&quot;#Trie树&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="Trie树" scheme="https://hubertwongcn.github.io/tags/Trie%E6%A0%91/"/>
    
    <category term="数据库索引" scheme="https://hubertwongcn.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95/"/>
    
    <category term="倒排索引" scheme="https://hubertwongcn.github.io/tags/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95/"/>
    
  </entry>
  
  <entry>
    <title>13.大数据处理 - 双层桶划分</title>
    <link href="https://hubertwongcn.github.io/2023/12/28/13-da-shu-ju-chu-li-shuang-ceng-tong-hua-fen/"/>
    <id>https://hubertwongcn.github.io/2023/12/28/13-da-shu-ju-chu-li-shuang-ceng-tong-hua-fen/</id>
    <published>2023-12-27T18:25:49.000Z</published>
    <updated>2023-12-27T18:25:49.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要介绍大数据处理之分桶处理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;分桶法简介&quot;&gt;&lt;a href=&quot;#分桶法简介&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="双层桶划分" scheme="https://hubertwongcn.github.io/tags/%E5%8F%8C%E5%B1%82%E6%A1%B6%E5%88%92%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>12.大数据处理 - Bitmap &amp; Bloom Filter</title>
    <link href="https://hubertwongcn.github.io/2023/12/27/12-da-shu-ju-chu-li-bitmap-bloom-filter/"/>
    <id>https://hubertwongcn.github.io/2023/12/27/12-da-shu-ju-chu-li-bitmap-bloom-filter/</id>
    <published>2023-12-27T15:23:06.000Z</published>
    <updated>2023-12-27T15:23:06.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;布隆过滤器有着广泛的应用，对于大量数据的“存不存在”的问题在空间上有明显优势，但是在判断存不存在是有一定的错误率(false positive)，也就是说，有可能把不属于这个集合的元素误认为属于这个集合(False</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="Bitmap" scheme="https://hubertwongcn.github.io/tags/Bitmap/"/>
    
    <category term="Bloom Filter" scheme="https://hubertwongcn.github.io/tags/Bloom-Filter/"/>
    
  </entry>
  
  <entry>
    <title>11.大数据处理 - 分治/hash/排序</title>
    <link href="https://hubertwongcn.github.io/2023/12/27/11-da-shu-ju-chu-li-fen-zhi-hash-pai-xu/"/>
    <id>https://hubertwongcn.github.io/2023/12/27/11-da-shu-ju-chu-li-fen-zhi-hash-pai-xu/</id>
    <published>2023-12-27T15:20:24.000Z</published>
    <updated>2023-12-27T15:20:24.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;大数据处理思路: 分而治之/Hash映射 + Hash_map统计 + 堆/快速/归并排序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路简介&quot;&gt;&lt;a href=&quot;#思路简介&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="分治" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E6%B2%BB/"/>
    
    <category term="hash" scheme="https://hubertwongcn.github.io/tags/hash/"/>
    
    <category term="排序" scheme="https://hubertwongcn.github.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>10.大数据处理 - Overview</title>
    <link href="https://hubertwongcn.github.io/2023/12/27/10-da-shu-ju-chu-li-overview/"/>
    <id>https://hubertwongcn.github.io/2023/12/27/10-da-shu-ju-chu-li-overview/</id>
    <published>2023-12-27T15:18:27.000Z</published>
    <updated>2023-12-27T15:18:27.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要介绍大数据处理的一些思路。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;何谓海量数据处理&quot;&gt;&lt;a href=&quot;#何谓海量数据处理&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="大数据处理" scheme="https://hubertwongcn.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>9.字符串匹配 - 文本预处理：后缀树（Suffix Tree）</title>
    <link href="https://hubertwongcn.github.io/2023/12/27/9-zi-fu-chuan-pi-pei-wen-ben-yu-chu-li-hou-zhui-shu-suffix-tree/"/>
    <id>https://hubertwongcn.github.io/2023/12/27/9-zi-fu-chuan-pi-pei-wen-ben-yu-chu-li-hou-zhui-shu-suffix-tree/</id>
    <published>2023-12-27T15:07:51.000Z</published>
    <updated>2023-12-27T15:07:51.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;上述字符串匹配算法(朴素的字符串匹配算法, KMP 算法, Boyer-Moore算法)均是通过对&lt;strong&gt;模式（Pattern）字符串进行预处理&lt;/strong&gt;的方式来加快搜索速度。对 Pattern 进行预处理的最优复杂度为</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="字符串匹配" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/"/>
    
    <category term="模式预处理" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/%E6%A8%A1%E5%BC%8F%E9%A2%84%E5%A4%84%E7%90%86/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="字符串匹配" scheme="https://hubertwongcn.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/"/>
    
    <category term="模式预处理" scheme="https://hubertwongcn.github.io/tags/%E6%A8%A1%E5%BC%8F%E9%A2%84%E5%A4%84%E7%90%86/"/>
    
    <category term="后缀树" scheme="https://hubertwongcn.github.io/tags/%E5%90%8E%E7%BC%80%E6%A0%91/"/>
    
    <category term="Suffix Tree" scheme="https://hubertwongcn.github.io/tags/Suffix-Tree/"/>
    
  </entry>
  
  <entry>
    <title>8.字符串匹配 - 模式预处理：BM 算法 (Boyer-Moore)</title>
    <link href="https://hubertwongcn.github.io/2023/12/27/8-zi-fu-chuan-pi-pei-mo-shi-yu-chu-li-bm-suan-fa-boyer-moore/"/>
    <id>https://hubertwongcn.github.io/2023/12/27/8-zi-fu-chuan-pi-pei-mo-shi-yu-chu-li-bm-suan-fa-boyer-moore/</id>
    <published>2023-12-27T15:01:46.000Z</published>
    <updated>2023-12-27T14:52:44.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;各种文本编辑器的”查找”功能（Ctrl+F），大多采用Boyer-Moore算法，效率非常高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;算法简介&quot;&gt;&lt;a href=&quot;#算法简介&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="字符串匹配" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/"/>
    
    <category term="模式预处理" scheme="https://hubertwongcn.github.io/categories/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/%E6%A8%A1%E5%BC%8F%E9%A2%84%E5%A4%84%E7%90%86/"/>
    
    
    <category term="算法" scheme="https://hubertwongcn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="字符串匹配" scheme="https://hubertwongcn.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/"/>
    
    <category term="模式预处理" scheme="https://hubertwongcn.github.io/tags/%E6%A8%A1%E5%BC%8F%E9%A2%84%E5%A4%84%E7%90%86/"/>
    
    <category term="BM 算法" scheme="https://hubertwongcn.github.io/tags/BM-%E7%AE%97%E6%B3%95/"/>
    
    <category term="Boyer-Moore" scheme="https://hubertwongcn.github.io/tags/Boyer-Moore/"/>
    
  </entry>
  
</feed>
