<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hubert&#39;s Blog</title>
  
  <subtitle> Hubert爱猫爱生活</subtitle>
  <link href="https://hubertwongcn.github.io/atom.xml" rel="self"/>
  
  <link href="https://hubertwongcn.github.io/"/>
  <updated>2023-12-29T21:25:04.000Z</updated>
  <id>https://hubertwongcn.github.io/</id>
  
  <author>
    <name>Hubert Wong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>12.代码质量 - 代码质量管理: SpotBugs插件详解</title>
    <link href="https://hubertwongcn.github.io/posts/34529.html"/>
    <id>https://hubertwongcn.github.io/posts/34529.html</id>
    <published>2023-12-29T21:25:04.000Z</published>
    <updated>2023-12-29T21:25:04.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;SpotBugs是Findbugs的继任者（Findbugs已经于2016年后不再维护），用于对代码进行静态分析，查找相关的漏洞；在本地IDE中可以配置SpotBugs插件进行检查。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="统一风格" scheme="https://hubertwongcn.github.io/tags/%E7%BB%9F%E4%B8%80%E9%A3%8E%E6%A0%BC/"/>
    
    <category term="SpotBugs" scheme="https://hubertwongcn.github.io/tags/SpotBugs/"/>
    
  </entry>
  
  <entry>
    <title>11.代码质量 - 代码质量管理: Sonarlint插件详解</title>
    <link href="https://hubertwongcn.github.io/posts/9491.html"/>
    <id>https://hubertwongcn.github.io/posts/9491.html</id>
    <published>2023-12-29T21:22:55.000Z</published>
    <updated>2023-12-29T21:22:55.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在提交代码前，为提升代码质量还需要使用一些静态代码工具检查代码质量，最为常用的是Sonar；在本地IDE中可以配置Sonarlint插件进行检查。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Sonar是什么？&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="统一风格" scheme="https://hubertwongcn.github.io/tags/%E7%BB%9F%E4%B8%80%E9%A3%8E%E6%A0%BC/"/>
    
    <category term="Sonarlint" scheme="https://hubertwongcn.github.io/tags/Sonarlint/"/>
    
  </entry>
  
  <entry>
    <title>10.代码质量 - 统一风格：静态样式检查详解</title>
    <link href="https://hubertwongcn.github.io/posts/15682.html"/>
    <id>https://hubertwongcn.github.io/posts/15682.html</id>
    <published>2023-12-29T21:20:29.000Z</published>
    <updated>2023-12-29T21:20:29.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;统一样式检查规范里，最为常用的统一样式工具是checkstyle插件，本文将介绍常用的统一风格的措施之&lt;strong&gt;静态样式检查&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;统一样式检查&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="统一风格" scheme="https://hubertwongcn.github.io/tags/%E7%BB%9F%E4%B8%80%E9%A3%8E%E6%A0%BC/"/>
    
    <category term="静态样式检查" scheme="https://hubertwongcn.github.io/tags/%E9%9D%99%E6%80%81%E6%A0%B7%E5%BC%8F%E6%A3%80%E6%9F%A5/"/>
    
  </entry>
  
  <entry>
    <title>9.代码质量 - 统一风格：统一命名规范详解</title>
    <link href="https://hubertwongcn.github.io/posts/15682.html"/>
    <id>https://hubertwongcn.github.io/posts/15682.html</id>
    <published>2023-12-29T21:15:26.000Z</published>
    <updated>2023-12-29T21:15:26.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;好的代码本身就是注释, 所以我们需要统一命名风格，本文将介绍常用的统一风格的措施之&lt;strong&gt;统一命名规范&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;统一命名风格&quot;&gt;&lt;a href=&quot;#统一命名风格&quot;</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="统一风格" scheme="https://hubertwongcn.github.io/tags/%E7%BB%9F%E4%B8%80%E9%A3%8E%E6%A0%BC/"/>
    
    <category term="命名规范" scheme="https://hubertwongcn.github.io/tags/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>8.代码质量 - 统一风格：统一代码格式化详解</title>
    <link href="https://hubertwongcn.github.io/posts/31108.html"/>
    <id>https://hubertwongcn.github.io/posts/31108.html</id>
    <published>2023-12-29T21:11:39.000Z</published>
    <updated>2023-12-29T21:11:39.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;项目的代码通常是一个团队共同完成的，要保障代码质量的首要前提就是统一代码的风格，本文将介绍常用的统一风格的措施之&lt;strong&gt;统一代码格式化&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;统一代码格式化&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="统一风格" scheme="https://hubertwongcn.github.io/tags/%E7%BB%9F%E4%B8%80%E9%A3%8E%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>7.单元测试 - SpringBoot2+H2+Mockito实战</title>
    <link href="https://hubertwongcn.github.io/posts/32905.html"/>
    <id>https://hubertwongcn.github.io/posts/32905.html</id>
    <published>2023-12-29T21:08:43.000Z</published>
    <updated>2023-12-29T21:08:43.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在真实的开发中，我们通常是使用SpringBoot的，目前SpringBoot是v2.4.x的版本（SpringBoot 2.2.2.RELEASE之前默认是使用</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="单元测试" scheme="https://hubertwongcn.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
    <category term="Mockito" scheme="https://hubertwongcn.github.io/tags/Mockito/"/>
    
    <category term="SpringBoot2" scheme="https://hubertwongcn.github.io/tags/SpringBoot2/"/>
    
    <category term="H2" scheme="https://hubertwongcn.github.io/tags/H2/"/>
    
  </entry>
  
  <entry>
    <title>6.单元测试 - IDEA下单元测试详解</title>
    <link href="https://hubertwongcn.github.io/posts/57541.html"/>
    <id>https://hubertwongcn.github.io/posts/57541.html</id>
    <published>2023-12-29T21:04:24.000Z</published>
    <updated>2023-12-29T21:04:24.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;工欲善其事必先利其器，我们在写单元测试一定要使用工具，这将能大幅度提升编码的效率。本文以IDEA为例，看看如何利用插件提升效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;场景准备&quot;&gt;&lt;a href=&quot;#场景准备&quot;</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="单元测试" scheme="https://hubertwongcn.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
    <category term="IDEA" scheme="https://hubertwongcn.github.io/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>5.单元测试 - Mockito 详解</title>
    <link href="https://hubertwongcn.github.io/posts/5030.html"/>
    <id>https://hubertwongcn.github.io/posts/5030.html</id>
    <published>2023-12-29T21:00:58.000Z</published>
    <updated>2023-12-29T21:00:58.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Mock通常是指，在测试一个对象A时，我们构造一些假的对象来模拟与A之间的交互，而这些Mock对象的行为是我们事先设定且符合预期。通过这些Mock对象来测试A在正常逻辑，异常逻辑或压力情况下工作是否正常。而Mockito是最流行的Java</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="单元测试" scheme="https://hubertwongcn.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
    <category term="Mockito" scheme="https://hubertwongcn.github.io/tags/Mockito/"/>
    
  </entry>
  
  <entry>
    <title>4.单元测试 - Junit5 详解</title>
    <link href="https://hubertwongcn.github.io/posts/59340.html"/>
    <id>https://hubertwongcn.github.io/posts/59340.html</id>
    <published>2023-12-29T20:56:32.000Z</published>
    <updated>2023-12-29T20:56:32.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;JUnit 5是JUnit的下一代。目标是为JVM上的开发人员端测试创建一个最新的基础。这包括专注于Java 8及更高版本，以及启用许多不同风格的测试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;官方资料&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="单元测试" scheme="https://hubertwongcn.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
    <category term="Junit5" scheme="https://hubertwongcn.github.io/tags/Junit5/"/>
    
  </entry>
  
  <entry>
    <title>3.单元测试 - JUnit4 详解</title>
    <link href="https://hubertwongcn.github.io/posts/25736.html"/>
    <id>https://hubertwongcn.github.io/posts/25736.html</id>
    <published>2023-12-29T20:51:59.000Z</published>
    <updated>2023-12-29T20:51:59.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;JUint是Java编程语言的单元测试框架，用于编写和运行可重复的自动化测试。本文主要针对Junit4要点进行梳理总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是JUnit？&quot;&gt;&lt;a href=&quot;#什么是JUnit？&quot;</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="单元测试" scheme="https://hubertwongcn.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
    <category term="JUnit4" scheme="https://hubertwongcn.github.io/tags/JUnit4/"/>
    
  </entry>
  
  <entry>
    <title>2.单元测试 - 浅谈单元测试</title>
    <link href="https://hubertwongcn.github.io/posts/37261.html"/>
    <id>https://hubertwongcn.github.io/posts/37261.html</id>
    <published>2023-12-29T20:50:33.000Z</published>
    <updated>2023-12-29T20:50:33.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;单元测试（unit testing），是指对软件中的最小可测试单元进行检查和验证。这是基础，所以围绕着单元测试，我从网上搜集和总结了相关的概念，以助你完善体系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是单元测试？&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    <category term="单元测试" scheme="https://hubertwongcn.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>1.代码质量保障知识体系详解</title>
    <link href="https://hubertwongcn.github.io/posts/46740.html"/>
    <id>https://hubertwongcn.github.io/posts/46740.html</id>
    <published>2023-12-29T20:49:04.000Z</published>
    <updated>2023-12-29T20:49:04.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本系列主要针对如何保障开发侧代码质量，包含单元测试及实现，以及常用的控制团队开发中代码质量的方式，比如代码风格，命名规范，静态代码检查等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;相关文章&quot;&gt;&lt;a href=&quot;#相关文章&quot;</summary>
        
      
    
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/categories/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
    
    <category term="代码质量" scheme="https://hubertwongcn.github.io/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>10.常用开发库 - 其它常用类库</title>
    <link href="https://hubertwongcn.github.io/posts/11332.html"/>
    <id>https://hubertwongcn.github.io/posts/11332.html</id>
    <published>2023-12-29T20:37:37.000Z</published>
    <updated>2023-12-29T20:37:37.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;其它常用类库体系很庞大，但是工具类的原则是只需要查找会使用即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;常用类库资源&quot;&gt;&lt;a href=&quot;#常用类库资源&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/categories/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/tags/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>9.常用开发库 - MapStruct工具库详解</title>
    <link href="https://hubertwongcn.github.io/posts/48259.html"/>
    <id>https://hubertwongcn.github.io/posts/48259.html</id>
    <published>2023-12-29T20:33:08.000Z</published>
    <updated>2023-12-29T20:33:08.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;MapStruct是一款非常实用Java工具，主要用于解决对象之间的拷贝问题，比如PO/DTO/VO/QueryParam之间的转换问题。区别于BeanUtils这种通过反射，它通过编译器编译生成常规方法，将可以很大程度上提升效率。全面的官方手册可</summary>
        
      
    
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/categories/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/tags/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    <category term="MapStruct" scheme="https://hubertwongcn.github.io/tags/MapStruct/"/>
    
  </entry>
  
  <entry>
    <title>8.常用开发库 - Lombok工具库详解</title>
    <link href="https://hubertwongcn.github.io/posts/56241.html"/>
    <id>https://hubertwongcn.github.io/posts/56241.html</id>
    <published>2023-12-29T20:28:58.000Z</published>
    <updated>2023-12-29T20:28:58.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Lombok是一款非常实用Java工具，可用来帮助开发人员消除Java的冗长代码，尤其是对于简单的Java对象（POJO）。实际上我并不推荐使用Lombok（不主动使用它）,</summary>
        
      
    
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/categories/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/tags/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    <category term="Lombok" scheme="https://hubertwongcn.github.io/tags/Lombok/"/>
    
  </entry>
  
  <entry>
    <title>7.常用开发库 - JSON库详解</title>
    <link href="https://hubertwongcn.github.io/posts/30367.html"/>
    <id>https://hubertwongcn.github.io/posts/30367.html</id>
    <published>2023-12-29T20:26:35.000Z</published>
    <updated>2023-12-29T20:26:35.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;JSON应用非常广泛，对于Java常用的JSON库要完全掌握; 其中考虑到FastJson代码质量，漏洞，坑等等，应该尽量避免使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;JSON简介&quot;&gt;&lt;a href=&quot;#JSON简介&quot;</summary>
        
      
    
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/categories/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/tags/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    <category term="JSON库" scheme="https://hubertwongcn.github.io/tags/JSON%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>5.常用开发库 - Spring常用工具类</title>
    <link href="https://hubertwongcn.github.io/posts/1112.html"/>
    <id>https://hubertwongcn.github.io/posts/1112.html</id>
    <published>2023-12-29T20:24:43.000Z</published>
    <updated>2023-12-29T20:24:43.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;pring作为常用的开发框架，在Spring框架应用中，排在ApacheCommon，Guava,</summary>
        
      
    
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/categories/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/tags/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>4.常用开发库 - Hutool包</title>
    <link href="https://hubertwongcn.github.io/posts/54772.html"/>
    <id>https://hubertwongcn.github.io/posts/54772.html</id>
    <published>2023-12-29T20:23:10.000Z</published>
    <updated>2023-12-29T20:23:10.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Hutool作为后起之秀，功能上也比较全。但是要注意一点，它的开源协议是：中国第一个开源协议&lt;a href=&quot;http://license.coscl.org.cn/MulanPSL&quot;&gt;木兰宽松许可证,</summary>
        
      
    
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/categories/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/tags/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    <category term="Hutool" scheme="https://hubertwongcn.github.io/tags/Hutool/"/>
    
  </entry>
  
  <entry>
    <title>3.常用开发库 - Google Guava包</title>
    <link href="https://hubertwongcn.github.io/posts/31788.html"/>
    <id>https://hubertwongcn.github.io/posts/31788.html</id>
    <published>2023-12-29T20:21:35.000Z</published>
    <updated>2023-12-29T20:21:35.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Google出品的common包，我比较常用的比如Guava缓存等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Google-Guava简介&quot;&gt;&lt;a href=&quot;#Google-Guava简介&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/categories/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/tags/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    <category term="Google Guava" scheme="https://hubertwongcn.github.io/tags/Google-Guava/"/>
    
  </entry>
  
  <entry>
    <title>2.常用开发库 - Apache Common包</title>
    <link href="https://hubertwongcn.github.io/posts/48569.html"/>
    <id>https://hubertwongcn.github.io/posts/48569.html</id>
    <published>2023-12-29T20:19:25.000Z</published>
    <updated>2023-12-29T20:19:25.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Apache common不仅被成千上万开源工具使用，更是学习Java编程比较好的代码参考工具，效率工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Apache-Common包简介&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/categories/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    
    <category term="开发类库" scheme="https://hubertwongcn.github.io/tags/%E5%BC%80%E5%8F%91%E7%B1%BB%E5%BA%93/"/>
    
    <category term="Apache Common" scheme="https://hubertwongcn.github.io/tags/Apache-Common/"/>
    
  </entry>
  
</feed>
