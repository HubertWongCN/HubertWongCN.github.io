<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hubert&#39;s Blog</title>
  
  <subtitle> Hubert爱猫爱生活</subtitle>
  <link href="https://hubertwongcn.github.io/atom.xml" rel="self"/>
  
  <link href="https://hubertwongcn.github.io/"/>
  <updated>2024-01-09T17:00:04.000Z</updated>
  <id>https://hubertwongcn.github.io/</id>
  
  <author>
    <name>Hubert Wong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>16.架构 - 学习资料</title>
    <link href="https://hubertwongcn.github.io/posts/45953.html"/>
    <id>https://hubertwongcn.github.io/posts/45953.html</id>
    <published>2024-01-09T17:00:04.000Z</published>
    <updated>2024-01-09T17:00:04.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这里主要总结下架构相关的学习资料。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;书籍推荐&quot;&gt;&lt;a href=&quot;#书籍推荐&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>15.架构 - 保障架构安全</title>
    <link href="https://hubertwongcn.github.io/posts/41191.html"/>
    <id>https://hubertwongcn.github.io/posts/41191.html</id>
    <published>2024-01-09T16:58:28.000Z</published>
    <updated>2024-01-09T16:58:28.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文对架构安全知识点梳理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;架构安全&quot;&gt;&lt;a href=&quot;#架构安全&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="架构安全" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>14.架构之高可用：容灾备份,故障转移</title>
    <link href="https://hubertwongcn.github.io/posts/63343.html"/>
    <id>https://hubertwongcn.github.io/posts/63343.html</id>
    <published>2024-01-09T16:55:58.000Z</published>
    <updated>2024-01-09T16:55:58.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;容灾技术是系统的高可用性技术的一个组成部分，容灾系统更加强调处理外界环境对系统的影响，特别是灾难性事件对整个IT节点的影响，提供节点级别的系统恢复功能。故障转移（failover），即当活动的服务或应用意外终止时，快速启用&lt;strong&gt;冗余&lt;/s</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="高并发" scheme="https://hubertwongcn.github.io/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    <category term="容灾备份" scheme="https://hubertwongcn.github.io/tags/%E5%AE%B9%E7%81%BE%E5%A4%87%E4%BB%BD/"/>
    
    <category term="故障转移" scheme="https://hubertwongcn.github.io/tags/%E6%95%85%E9%9A%9C%E8%BD%AC%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>13.架构之高可用：负载均衡</title>
    <link href="https://hubertwongcn.github.io/posts/14293.html"/>
    <id>https://hubertwongcn.github.io/posts/14293.html</id>
    <published>2024-01-09T16:52:50.000Z</published>
    <updated>2024-01-09T16:52:50.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;负载均衡（Load Balance），意思是将负载（工作任务，访问请求）进行平衡、分摊到多个操作单元（服务器，组件）上进行执行。是解决高性能，单点故障（高可用），扩展性（水平伸缩）的终极解决方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="高并发" scheme="https://hubertwongcn.github.io/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    <category term="负载均衡" scheme="https://hubertwongcn.github.io/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>12.架构之高并发：降级和熔断</title>
    <link href="https://hubertwongcn.github.io/posts/8066.html"/>
    <id>https://hubertwongcn.github.io/posts/8066.html</id>
    <published>2024-01-09T16:49:08.000Z</published>
    <updated>2024-01-09T16:49:08.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在高并发环境下，&lt;strong&gt;服务之间的依赖关系导致调用失败，解决的方式通常是: 限流-&amp;gt;熔断-&amp;gt;隔离-&amp;gt;降级, 其目的是防止雪崩效应&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="高并发" scheme="https://hubertwongcn.github.io/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    <category term="降级" scheme="https://hubertwongcn.github.io/tags/%E9%99%8D%E7%BA%A7/"/>
    
    <category term="熔断" scheme="https://hubertwongcn.github.io/tags/%E7%86%94%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>11.架构之高并发：限流</title>
    <link href="https://hubertwongcn.github.io/posts/15400.html"/>
    <id>https://hubertwongcn.github.io/posts/15400.html</id>
    <published>2024-01-09T16:46:37.000Z</published>
    <updated>2024-01-09T16:46:37.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;每个系统都有服务的上线，所以当流量超过服务极限能力时，系统可能会出现卡死、崩溃的情况，所以就有了降级和限流。限流其实就是：当高并发或者瞬时高并发时，为了保证系统的稳定性、可用性，系统以牺牲部分请求为代价或者延迟处理请求为代价，保证系统整体服务可用。</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="高并发" scheme="https://hubertwongcn.github.io/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    <category term="限流" scheme="https://hubertwongcn.github.io/tags/%E9%99%90%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>10.架构之高并发：缓存</title>
    <link href="https://hubertwongcn.github.io/posts/23199.html"/>
    <id>https://hubertwongcn.github.io/posts/23199.html</id>
    <published>2024-01-09T16:42:22.000Z</published>
    <updated>2024-01-09T16:42:22.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;高并发实现的三板斧：缓存，限流和降级&lt;/strong&gt;。缓存在高并发系统中有者极其广阔的应用，需要重点掌握，本文重点介绍下缓存及其实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;缓存简介&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="高并发" scheme="https://hubertwongcn.github.io/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    <category term="缓存" scheme="https://hubertwongcn.github.io/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>9.架构 - 理解架构的核心要素</title>
    <link href="https://hubertwongcn.github.io/posts/46707.html"/>
    <id>https://hubertwongcn.github.io/posts/46707.html</id>
    <published>2024-01-09T16:41:40.000Z</published>
    <updated>2024-01-09T16:41:40.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一般来说软件架构需要关注&lt;strong&gt;性能、可用性、伸缩性、扩展性和安全性这5个架构要素&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;架构的核心要素&quot;&gt;&lt;a href=&quot;#架构的核心要素&quot;</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>8.架构 - 理解架构的模式2</title>
    <link href="https://hubertwongcn.github.io/posts/27441.html"/>
    <id>https://hubertwongcn.github.io/posts/27441.html</id>
    <published>2024-01-09T16:34:48.000Z</published>
    <updated>2024-01-09T16:34:48.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;提示&lt;/p&gt;
&lt;p&gt;本文整理自&lt;a href=&quot;https://www.cnblogs.com/lovecindywang/p/9670356.html&quot;&gt;朱晔的互联网架构实践心得&lt;/a&gt;, 他是结合了</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>7.架构 - 理解架构的模式1</title>
    <link href="https://hubertwongcn.github.io/posts/26645.html"/>
    <id>https://hubertwongcn.github.io/posts/26645.html</id>
    <published>2024-01-09T16:33:52.000Z</published>
    <updated>2024-01-09T16:33:52.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;架构演进中有很多知识点，总体上可以归结为以下模式，&lt;strong&gt;这里说的模式本质是架构中技术点的抽象&lt;/strong&gt;。强烈推荐李智慧老师的《大型网站技术架构》，本文的内容也是来源于它，在此基础上拓展了下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>6.架构 - 理解架构的服务演化</title>
    <link href="https://hubertwongcn.github.io/posts/42620.html"/>
    <id>https://hubertwongcn.github.io/posts/42620.html</id>
    <published>2024-01-09T16:09:33.000Z</published>
    <updated>2024-01-09T16:09:33.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Kubernetes、Service Mesh 和</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>5.架构 - 理解架构的演进</title>
    <link href="https://hubertwongcn.github.io/posts/48641.html"/>
    <id>https://hubertwongcn.github.io/posts/48641.html</id>
    <published>2024-01-09T16:03:14.000Z</published>
    <updated>2024-01-09T16:03:14.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在学习架构时，&lt;strong&gt;第一步不要去学习框架，而是要学习架构的演进&lt;/strong&gt;。强烈推荐李智慧老师的《大型网站技术架构》，这本书翻起来很快，对构筑你自己的体系很有帮助，本文的内容来源于它，在此基础上拓展了下。&lt;/p&gt;
&lt;/blockqu</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>4.架构 - 理解构架的分层</title>
    <link href="https://hubertwongcn.github.io/posts/29447.html"/>
    <id>https://hubertwongcn.github.io/posts/29447.html</id>
    <published>2024-01-09T16:02:06.000Z</published>
    <updated>2024-01-09T16:02:06.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;技术框架（technological</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>3.架构 - 理解构架的视角</title>
    <link href="https://hubertwongcn.github.io/posts/17231.html"/>
    <id>https://hubertwongcn.github.io/posts/17231.html</id>
    <published>2024-01-09T15:59:52.000Z</published>
    <updated>2024-01-09T15:59:52.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在学习架构时，我认为首先要理清楚架构的视角，&lt;strong&gt;因为你所认知的架构和别人所说的架构可能是两码事&lt;/strong&gt;。对于不同职位的视角是不一样的，比如开发而言他更多的看到的是开发架构；对售前人员，他可能更多的看到的是业务架构；对于运维人员</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>2.架构 - 架构基础: 特点,本质...</title>
    <link href="https://hubertwongcn.github.io/posts/64716.html"/>
    <id>https://hubertwongcn.github.io/posts/64716.html</id>
    <published>2024-01-09T15:58:40.000Z</published>
    <updated>2024-01-09T15:58:40.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本节总结下架构相关的基础知识：概述，特点，目标，本质… &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;软件架构简介&quot;&gt;&lt;a href=&quot;#软件架构简介&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>1.架构 - 知识体系详解</title>
    <link href="https://hubertwongcn.github.io/posts/33371.html"/>
    <id>https://hubertwongcn.github.io/posts/33371.html</id>
    <published>2024-01-09T15:57:20.000Z</published>
    <updated>2024-01-09T15:57:20.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;提示&lt;/p&gt;
&lt;p&gt;本系列将带你梳理下架构相关的知识体系。&lt;/p&gt;
&lt;h2 id=&quot;如何学习架构&quot;&gt;&lt;a href=&quot;#如何学习架构&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="架构" scheme="https://hubertwongcn.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>9.ShardingSphere详解 - 通过影子库进行压测</title>
    <link href="https://hubertwongcn.github.io/posts/50188.html"/>
    <id>https://hubertwongcn.github.io/posts/50188.html</id>
    <published>2024-01-09T15:32:34.000Z</published>
    <updated>2024-01-09T15:32:34.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Apache ShardingSphere 关注于全链路压测场景下，数据库层面的解决方案。 将压测数据自动路由至用户指定的数据库，是 Apache ShardingSphere 影子库模块的主要设计目标; 这篇文章主要转载自&lt;a</summary>
        
      
    
    
    
    <category term="ShardingSphere" scheme="https://hubertwongcn.github.io/categories/ShardingSphere/"/>
    
    
    <category term="中间件" scheme="https://hubertwongcn.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="分布式数据库" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="ShardingSphere" scheme="https://hubertwongcn.github.io/tags/ShardingSphere/"/>
    
    <category term="影子库" scheme="https://hubertwongcn.github.io/tags/%E5%BD%B1%E5%AD%90%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>8.ShardingSphere详解 - 弹性伸缩原理</title>
    <link href="https://hubertwongcn.github.io/posts/63143.html"/>
    <id>https://hubertwongcn.github.io/posts/63143.html</id>
    <published>2024-01-09T15:31:17.000Z</published>
    <updated>2024-01-09T15:31:17.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;支持自定义分片算法，减少数据伸缩及迁移时的业务影响，提供一站式的通用弹性伸缩解决方案，是 Apache ShardingSphere 弹性伸缩的主要设计目标; 这篇文章主要转载自&lt;a</summary>
        
      
    
    
    
    <category term="ShardingSphere" scheme="https://hubertwongcn.github.io/categories/ShardingSphere/"/>
    
    
    <category term="中间件" scheme="https://hubertwongcn.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="分布式数据库" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="ShardingSphere" scheme="https://hubertwongcn.github.io/tags/ShardingSphere/"/>
    
  </entry>
  
  <entry>
    <title>7.ShardingSphere详解 - 事务实现原理之柔性事务SEATA</title>
    <link href="https://hubertwongcn.github.io/posts/17793.html"/>
    <id>https://hubertwongcn.github.io/posts/17793.html</id>
    <published>2024-01-09T15:30:05.000Z</published>
    <updated>2024-01-09T15:30:05.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Apache ShardingSphere 集成了 SEATA 作为柔性事务的使用方案，本文主要介绍其实现原理; 这篇文章主要转载自&lt;a</summary>
        
      
    
    
    
    <category term="ShardingSphere" scheme="https://hubertwongcn.github.io/categories/ShardingSphere/"/>
    
    
    <category term="中间件" scheme="https://hubertwongcn.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="分布式数据库" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="ShardingSphere" scheme="https://hubertwongcn.github.io/tags/ShardingSphere/"/>
    
    <category term="SEATA" scheme="https://hubertwongcn.github.io/tags/SEATA/"/>
    
  </entry>
  
  <entry>
    <title>6.ShardingSphere详解 - 事务实现原理之柔性事务SAGA</title>
    <link href="https://hubertwongcn.github.io/posts/60976.html"/>
    <id>https://hubertwongcn.github.io/posts/60976.html</id>
    <published>2024-01-09T15:29:09.000Z</published>
    <updated>2024-01-09T15:29:09.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Apache ShardingSphere 在v5.0版本前还支持柔性事务SAGA，目前看5.x+版本中已经移除了向观众章节，本文主要介绍其实现原理; 这篇文章主要转载自&lt;a</summary>
        
      
    
    
    
    <category term="ShardingSphere" scheme="https://hubertwongcn.github.io/categories/ShardingSphere/"/>
    
    
    <category term="中间件" scheme="https://hubertwongcn.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="分布式数据库" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="ShardingSphere" scheme="https://hubertwongcn.github.io/tags/ShardingSphere/"/>
    
    <category term="SAGA" scheme="https://hubertwongcn.github.io/tags/SAGA/"/>
    
  </entry>
  
</feed>
