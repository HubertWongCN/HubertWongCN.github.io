<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hubert&#39;s Blog</title>
  
  <subtitle> Hubert爱猫爱生活</subtitle>
  <link href="https://hubertwongcn.github.io/atom.xml" rel="self"/>
  
  <link href="https://hubertwongcn.github.io/"/>
  <updated>2024-01-08T02:06:51.000Z</updated>
  <id>https://hubertwongcn.github.io/</id>
  
  <author>
    <name>Hubert Wong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>73.SpringBoot进阶 - 自定义starter</title>
    <link href="https://hubertwongcn.github.io/posts/29127.html"/>
    <id>https://hubertwongcn.github.io/posts/29127.html</id>
    <published>2024-01-08T02:06:51.000Z</published>
    <updated>2024-01-08T02:06:51.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;如何将自己的模块封装成starter， 并给其它springBoot项目使用呢？</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>72.SpringBoot进阶 - 实现自动装配原理</title>
    <link href="https://hubertwongcn.github.io/posts/11186.html"/>
    <id>https://hubertwongcn.github.io/posts/11186.html</id>
    <published>2024-01-08T02:06:22.000Z</published>
    <updated>2024-01-08T02:06:22.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>71.SpringBoot监控 - 集成springboot admin监控工具</title>
    <link href="https://hubertwongcn.github.io/posts/12333.html"/>
    <id>https://hubertwongcn.github.io/posts/12333.html</id>
    <published>2024-01-08T01:39:02.000Z</published>
    <updated>2024-01-08T01:39:02.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;上文中展示了SpringBoot提供了Actuator对应用进行监控和管理， 而Spring Boot Admin能够将 Actuator 中的信息进行界面化的展示，也可以监控所有 Spring Boot 应用的健康状况，提供实时警报功能。</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="springboot admin" scheme="https://hubertwongcn.github.io/tags/springboot-admin/"/>
    
  </entry>
  
  <entry>
    <title>70.SpringBoot监控 - 集成actuator监控工具</title>
    <link href="https://hubertwongcn.github.io/posts/24078.html"/>
    <id>https://hubertwongcn.github.io/posts/24078.html</id>
    <published>2024-01-08T01:21:05.000Z</published>
    <updated>2024-01-08T01:21:05.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;当SpringBoot的应用部署到生产环境中后，如何监控和管理呢？比如审计日志，监控状态，指标收集等。为了解决这个问题，SpringBoot提供了Actuator。本文主要介绍Spring Boot</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="actuator" scheme="https://hubertwongcn.github.io/tags/actuator/"/>
    
  </entry>
  
  <entry>
    <title>69.SpringBoot应用部署 - 使用Docker Compose对容器编排管理</title>
    <link href="https://hubertwongcn.github.io/posts/47702.html"/>
    <id>https://hubertwongcn.github.io/posts/47702.html</id>
    <published>2024-01-07T22:49:49.000Z</published>
    <updated>2024-01-07T22:49:49.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;如果docker容器是相互依赖的（比如SpringBoot容器依赖另外一个MySQL的数据库容器），那就需要对容器进行编排。本文主要介绍基于Docker</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="Docker Compose" scheme="https://hubertwongcn.github.io/tags/Docker-Compose/"/>
    
  </entry>
  
  <entry>
    <title>68.SpringBoot应用部署 - docker镜像打包,运行和管理</title>
    <link href="https://hubertwongcn.github.io/posts/11693.html"/>
    <id>https://hubertwongcn.github.io/posts/11693.html</id>
    <published>2024-01-07T19:03:31.000Z</published>
    <updated>2024-01-07T19:03:31.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;随着软虚拟化docker的流行，基于docker的devops技术栈也开始流行。本文主要介绍通过docker-maven-plugin将springboot应用打包成docker镜像，通过Docker桌面化管理工具或者Idea</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="docker" scheme="https://hubertwongcn.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>67.SpringBoot应用部署 - 在linux环境将jar制作成service</title>
    <link href="https://hubertwongcn.github.io/posts/53775.html"/>
    <id>https://hubertwongcn.github.io/posts/53775.html</id>
    <published>2024-01-07T18:51:21.000Z</published>
    <updated>2024-01-07T18:51:21.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文我们将SpringBoot应用打包成jar，那么如何将jar封装成service呢？本文主要介绍将SpringBoot应用部署成linux的service。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="linux" scheme="https://hubertwongcn.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>66.SpringBoot应用部署 - 替换tomcat为Undertow容器</title>
    <link href="https://hubertwongcn.github.io/posts/15476.html"/>
    <id>https://hubertwongcn.github.io/posts/15476.html</id>
    <published>2024-01-07T18:44:06.000Z</published>
    <updated>2024-01-07T18:44:06.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文我们了解到Jetty更满足公有云的分布式环境的需求，而Tomcat更符合企业级环境；那么从性能的角度来看，更为优秀的servlet容器是Undertow。本文将介绍Undertow，以及SpringBoot集成Undertow的示例。&lt;/p&gt;
</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="Undertow" scheme="https://hubertwongcn.github.io/tags/Undertow/"/>
    
  </entry>
  
  <entry>
    <title>65.SpringBoot应用部署 - 替换tomcat为Jetty容器</title>
    <link href="https://hubertwongcn.github.io/posts/45946.html"/>
    <id>https://hubertwongcn.github.io/posts/45946.html</id>
    <published>2024-01-07T18:30:42.000Z</published>
    <updated>2024-01-07T18:30:42.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文我们知道spring-boot-starter-web默认集成tomcat</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="Jetty" scheme="https://hubertwongcn.github.io/tags/Jetty/"/>
    
  </entry>
  
  <entry>
    <title>64.SpringBoot应用部署 - 打包成war部署</title>
    <link href="https://hubertwongcn.github.io/posts/18081.html"/>
    <id>https://hubertwongcn.github.io/posts/18081.html</id>
    <published>2024-01-07T18:16:38.000Z</published>
    <updated>2024-01-07T18:16:38.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文我们知道SpringBoot web项目默认打包成jar部署是非常方便的，那什么样的场景下还会打包成war呢？本文主要介绍SpringBoot应用打包成war包的示例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="war" scheme="https://hubertwongcn.github.io/tags/war/"/>
    
  </entry>
  
  <entry>
    <title>63.SpringBoot应用部署 - 使用第三方JAR包</title>
    <link href="https://hubertwongcn.github.io/posts/44372.html"/>
    <id>https://hubertwongcn.github.io/posts/44372.html</id>
    <published>2024-01-07T18:13:49.000Z</published>
    <updated>2024-01-07T18:13:49.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在项目中我们经常需要使用第三方的Jar，比如某些SDK，这些SDK没有直接发布到公开的maven仓库中，这种情况下如何使用这些三方JAR呢？本文提供最常用的两种方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="jar" scheme="https://hubertwongcn.github.io/tags/jar/"/>
    
  </entry>
  
  <entry>
    <title>62.SpringBoot应用部署 - 打包成jar部署</title>
    <link href="https://hubertwongcn.github.io/posts/46417.html"/>
    <id>https://hubertwongcn.github.io/posts/46417.html</id>
    <published>2024-01-07T17:58:22.000Z</published>
    <updated>2024-01-07T17:58:22.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我们知道spring-boot-starter-web默认已经集成了web容器（tomcat)，在部署前只需要将项目打包成jar即可。那么怎么将springboot web项目打包成jar呢？本文主要介绍常见的几种方式。</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="jar" scheme="https://hubertwongcn.github.io/tags/jar/"/>
    
  </entry>
  
  <entry>
    <title>61.SpringBoot集成JavaFX2 - JavaFX 2.0应用</title>
    <link href="https://hubertwongcn.github.io/posts/20412.html"/>
    <id>https://hubertwongcn.github.io/posts/20412.html</id>
    <published>2024-01-07T17:50:19.000Z</published>
    <updated>2024-01-07T17:50:19.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;很多人对Java开发native程序第一反应还停留在暗灰色单一风格的Java GUI界面，开发方式还停留在AWT或者Swing。本文主要基于SpringBoot和JavaFX开发一个Demo给你展示Java</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="JavaFX2" scheme="https://hubertwongcn.github.io/tags/JavaFX2/"/>
    
  </entry>
  
  <entry>
    <title>60.SpringBoot后端视图 - 基于Thymeleaf视图解析</title>
    <link href="https://hubertwongcn.github.io/posts/54821.html"/>
    <id>https://hubertwongcn.github.io/posts/54821.html</id>
    <published>2024-01-07T17:48:57.000Z</published>
    <updated>2024-01-07T17:48:57.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;知识准备&quot;&gt;&lt;a href=&quot;#知识准备&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="Thymeleaf" scheme="https://hubertwongcn.github.io/tags/Thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>59.SpringBoot集成文件 - 集成itextpdf之导出PDF</title>
    <link href="https://hubertwongcn.github.io/posts/32185.html"/>
    <id>https://hubertwongcn.github.io/posts/32185.html</id>
    <published>2024-01-07T16:42:07.000Z</published>
    <updated>2024-01-07T16:42:07.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;除了处理word,</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="itextpdf" scheme="https://hubertwongcn.github.io/tags/itextpdf/"/>
    
  </entry>
  
  <entry>
    <title>58.SpringBoot集成文件 - 集成POI-tl之基于模板的Word导出</title>
    <link href="https://hubertwongcn.github.io/posts/35326.html"/>
    <id>https://hubertwongcn.github.io/posts/35326.html</id>
    <published>2024-01-07T16:15:37.000Z</published>
    <updated>2024-01-07T16:15:37.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文我们介绍了通过Apache POI通过来导出word的例子；那如果是word模板方式，有没有开源库通过模板方式导出word呢？poi-tl是一个基于Apache</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="POI-tl" scheme="https://hubertwongcn.github.io/tags/POI-tl/"/>
    
  </entry>
  
  <entry>
    <title>57.SpringBoot集成文件 - 集成POI之Word导出</title>
    <link href="https://hubertwongcn.github.io/posts/54681.html"/>
    <id>https://hubertwongcn.github.io/posts/54681.html</id>
    <published>2024-01-07T15:55:23.000Z</published>
    <updated>2024-01-07T15:55:23.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文我们介绍了通过Apache POI导出excel，而Apache POI包含是操作Office Open XML（OOXML）标准和微软的OLE 2复合文档格式（OLE2）的Java</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="POI" scheme="https://hubertwongcn.github.io/tags/POI/"/>
    
  </entry>
  
  <entry>
    <title>56.SpringBoot集成文件 - 集成EasyPOI之Excel导入导出</title>
    <link href="https://hubertwongcn.github.io/posts/24716.html"/>
    <id>https://hubertwongcn.github.io/posts/24716.html</id>
    <published>2024-01-07T15:16:02.000Z</published>
    <updated>2024-01-07T15:16:02.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;除了POI和EasyExcel，国内还有一个EasyPOI框架较为常见，适用于没有使用过POI并希望快速操作Excel的入门项目，在中大型项目中并不推荐使用(为了保证知识体系的完整性，把EasyPOI也加了进来)。本文主要介绍SpringBoot集</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="EasyPOI" scheme="https://hubertwongcn.github.io/tags/EasyPOI/"/>
    
  </entry>
  
  <entry>
    <title>55.SpringBoot集成文件 - 集成EasyExcel之Excel导入导出</title>
    <link href="https://hubertwongcn.github.io/posts/16753.html"/>
    <id>https://hubertwongcn.github.io/posts/16753.html</id>
    <published>2024-01-07T14:29:32.000Z</published>
    <updated>2024-01-07T14:29:32.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;EasyExcel是一个基于Java的、快速、简洁、解决大文件内存溢出的Excel处理工具。它能让你在不用考虑性能、内存的等因素的情况下，快速完成Excel的读、写等功能。它是基于POI来封装实现的，主要解决其易用性，封装性和性能问题。本文主要介绍</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="EasyExcel" scheme="https://hubertwongcn.github.io/tags/EasyExcel/"/>
    
  </entry>
  
  <entry>
    <title>54.SpringBoot集成文件 - 集成POI之Excel导入导出</title>
    <link href="https://hubertwongcn.github.io/posts/10821.html"/>
    <id>https://hubertwongcn.github.io/posts/10821.html</id>
    <published>2024-01-07T13:37:53.000Z</published>
    <updated>2024-01-07T13:37:53.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Apache POI 是用Java编写的免费开源的跨平台的 Java API，Apache POI提供API给Java程序对Microsoft</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/categories/SpringBoot/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://hubertwongcn.github.io/tags/SpringBoot/"/>
    
    <category term="POI" scheme="https://hubertwongcn.github.io/tags/POI/"/>
    
  </entry>
  
</feed>
