<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hubert&#39;s Blog</title>
  
  <subtitle> Hubert爱猫爱生活</subtitle>
  <link href="https://hubertwongcn.github.io/atom.xml" rel="self"/>
  
  <link href="https://hubertwongcn.github.io/"/>
  <updated>2023-12-31T18:40:58.000Z</updated>
  <id>https://hubertwongcn.github.io/</id>
  
  <author>
    <name>Hubert Wong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>15.Spring进阶 - SpringMVC实现原理之DispatcherServlet处理请求的过程</title>
    <link href="https://hubertwongcn.github.io/posts/45124.html"/>
    <id>https://hubertwongcn.github.io/posts/45124.html</id>
    <published>2023-12-31T18:40:58.000Z</published>
    <updated>2023-12-31T18:40:58.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第二篇：Disp</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringMVC" scheme="https://hubertwongcn.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>14.Spring进阶 - SpringMVC实现原理之DispatcherServlet的初始化过程</title>
    <link href="https://hubertwongcn.github.io/posts/63180.html"/>
    <id>https://hubertwongcn.github.io/posts/63180.html</id>
    <published>2023-12-31T18:18:34.000Z</published>
    <updated>2023-12-31T18:18:34.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第一篇：Disp</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="SpringMVC" scheme="https://hubertwongcn.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>13.Spring进阶 - Spring AOP实现原理详解之JDK代理实现</title>
    <link href="https://hubertwongcn.github.io/posts/49182.html"/>
    <id>https://hubertwongcn.github.io/posts/49182.html</id>
    <published>2023-12-31T16:10:42.000Z</published>
    <updated>2023-12-31T16:10:42.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;上文我们学习了SpringAOP Cglib动态代理的实现，本文主要是SpringAOP JDK动态代理的案例和实现部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;引入&quot;&gt;&lt;a href=&quot;#引入&quot;</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="AOP" scheme="https://hubertwongcn.github.io/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>12.Spring进阶 - Spring AOP实现原理详解之Cglib代理实现</title>
    <link href="https://hubertwongcn.github.io/posts/35721.html"/>
    <id>https://hubertwongcn.github.io/posts/35721.html</id>
    <published>2023-12-31T15:18:28.000Z</published>
    <updated>2023-12-31T15:18:28.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我们在前文中已经介绍了SpringAOP的切面实现和创建动态代理的过程，那么动态代理是如何工作的呢？本文主要介绍Cglib动态代理的案例和SpringAOP实现的原理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;引入&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="AOP" scheme="https://hubertwongcn.github.io/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>11.Spring进阶 - Spring AOP实现原理详解之AOP代理的创建</title>
    <link href="https://hubertwongcn.github.io/posts/62748.html"/>
    <id>https://hubertwongcn.github.io/posts/62748.html</id>
    <published>2023-12-31T15:16:48.000Z</published>
    <updated>2023-12-31T15:16:48.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;上文我们介绍了Spring</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="AOP" scheme="https://hubertwongcn.github.io/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>10.Spring进阶 - Spring AOP实现原理详解之AOP切面的实现</title>
    <link href="https://hubertwongcn.github.io/posts/44643.html"/>
    <id>https://hubertwongcn.github.io/posts/44643.html</id>
    <published>2023-12-31T14:10:36.000Z</published>
    <updated>2023-12-31T14:10:36.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文，我们分析了Spring IOC的初始化过程和Bean的生命周期等，而Spring AOP也是基于IOC的Bean加载来实现的。本文主要介绍Spring</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="AOP" scheme="https://hubertwongcn.github.io/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>9.Spring进阶- Spring IOC实现原理详解之Bean实例化(生命周期,循环依赖等)</title>
    <link href="https://hubertwongcn.github.io/posts/26004.html"/>
    <id>https://hubertwongcn.github.io/posts/26004.html</id>
    <published>2023-12-31T12:04:05.000Z</published>
    <updated>2023-12-31T12:04:05.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;上文，我们看了IOC设计要点和设计结构；以及Spring如何实现将资源配置（以xml配置为例）通过加载，解析，生成BeanDefination并注册到IoC容器中的；容器中存放的是Bean的定义即BeanDefinition放到beanDefini</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="IOC" scheme="https://hubertwongcn.github.io/tags/IOC/"/>
    
  </entry>
  
  <entry>
    <title>8.Spring进阶- Spring IOC实现原理详解之IOC初始化流程</title>
    <link href="https://hubertwongcn.github.io/posts/56658.html"/>
    <id>https://hubertwongcn.github.io/posts/56658.html</id>
    <published>2023-12-31T11:59:45.000Z</published>
    <updated>2023-12-31T11:59:45.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;上文，我们看了IOC设计要点和设计结构；紧接着这篇，我们可以看下源码的实现了：Spring如何实现将资源配置（以xml配置为例）通过加载，解析，生成BeanDefination并注册到IoC容器中的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="IOC" scheme="https://hubertwongcn.github.io/tags/IOC/"/>
    
  </entry>
  
  <entry>
    <title>7.Spring进阶- Spring IOC实现原理详解之IOC体系结构设计</title>
    <link href="https://hubertwongcn.github.io/posts/8457.html"/>
    <id>https://hubertwongcn.github.io/posts/8457.html</id>
    <published>2023-12-31T11:54:36.000Z</published>
    <updated>2023-12-31T11:54:36.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在对IoC有了初步的认知后，我们开始对IOC的实现原理进行深入理解。本文将帮助你站在设计者的角度去看IOC最顶层的结构设计。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;站在设计者的角度考虑设计IOC容器&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="IOC" scheme="https://hubertwongcn.github.io/tags/IOC/"/>
    
  </entry>
  
  <entry>
    <title>6.Spring基础 - SpringMVC请求流程和案例</title>
    <link href="https://hubertwongcn.github.io/posts/61563.html"/>
    <id>https://hubertwongcn.github.io/posts/61563.html</id>
    <published>2023-12-30T14:06:00.000Z</published>
    <updated>2023-12-30T14:06:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前文我们介绍了Spring框架和Spring框架中最为重要的两个技术点（IOC和AOP），那我们如何更好的构建上层的应用呢（比如web 应用），这便是SpringMVC；Spring MVC是Spring在Spring Container</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="SpringMVC" scheme="https://hubertwongcn.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>5.Spring基础 - Spring核心之面向切面编程(AOP)</title>
    <link href="https://hubertwongcn.github.io/posts/29325.html"/>
    <id>https://hubertwongcn.github.io/posts/29325.html</id>
    <published>2023-12-30T13:55:44.000Z</published>
    <updated>2023-12-30T13:55:44.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在&lt;a href=&quot;https://hubertwongcn.github.io/posts/48738.html&quot;&gt;Spring基础 -</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="IOC" scheme="https://hubertwongcn.github.io/tags/IOC/"/>
    
  </entry>
  
  <entry>
    <title>4.Spring基础 - Spring核心之控制反转(IOC)</title>
    <link href="https://hubertwongcn.github.io/posts/53250.html"/>
    <id>https://hubertwongcn.github.io/posts/53250.html</id>
    <published>2023-12-30T12:51:39.000Z</published>
    <updated>2023-12-30T12:51:39.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在&lt;a href=&quot;https://hubertwongcn.github.io/posts/48738.html&quot;&gt;Spring基础 -</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
    <category term="IOC" scheme="https://hubertwongcn.github.io/tags/IOC/"/>
    
  </entry>
  
  <entry>
    <title>3.Spring基础 - Spring简单例子引入Spring要点</title>
    <link href="https://hubertwongcn.github.io/posts/48738.html"/>
    <id>https://hubertwongcn.github.io/posts/48738.html</id>
    <published>2023-12-30T12:34:56.000Z</published>
    <updated>2023-12-30T12:34:56.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://hubertwongcn.github.io/posts/58019.html&quot;&gt;上文&lt;/a&gt;中我们简单介绍了Spring和Spring Framework的组件，那么这些Spring</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
  </entry>
  
  <entry>
    <title>2.Spring基础 - Spring和Spring框架组成</title>
    <link href="https://hubertwongcn.github.io/posts/58019.html"/>
    <id>https://hubertwongcn.github.io/posts/58019.html</id>
    <published>2023-12-30T12:29:09.000Z</published>
    <updated>2023-12-30T12:29:09.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Spring是什么？它是怎么诞生的？有哪些主要的组件和核心功能呢? 本文通过这几个问题帮助你构筑Spring和Spring Framework的整体认知。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是Spring&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
    <category term="Spring Framework" scheme="https://hubertwongcn.github.io/tags/Spring-Framework/"/>
    
  </entry>
  
  <entry>
    <title>1.Spring框架知识体系详解</title>
    <link href="https://hubertwongcn.github.io/posts/54783.html"/>
    <id>https://hubertwongcn.github.io/posts/54783.html</id>
    <published>2023-12-30T12:02:54.000Z</published>
    <updated>2023-12-30T12:02:54.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;提示&lt;/p&gt;
&lt;p&gt;本系列主要介绍Spring框架整体架构，Spring的核心IOC，AOP的案例和具体实现机制；以及SpringMVC框架的案例和实现机制。&lt;/p&gt;
&lt;h2 id=&quot;相关文章&quot;&gt;&lt;a href=&quot;#相关文章&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://hubertwongcn.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>2.常见重构技巧 - 去除不必要的!=</title>
    <link href="https://hubertwongcn.github.io/posts/4041.html"/>
    <id>https://hubertwongcn.github.io/posts/4041.html</id>
    <published>2023-12-30T11:40:10.000Z</published>
    <updated>2023-12-30T11:40:10.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;项目中会存在大量判空代码，多么丑陋繁冗！如何避免这种情况？我们是否滥用了判空呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;场景一：null无意义之常规判断空&quot;&gt;&lt;a href=&quot;#场景一：null无意义之常规判断空&quot;</summary>
        
      
    
    
    
    <category term="重构" scheme="https://hubertwongcn.github.io/categories/%E9%87%8D%E6%9E%84/"/>
    
    
    <category term="重构" scheme="https://hubertwongcn.github.io/tags/%E9%87%8D%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>1.常见重构技巧 - 去除多余的if else</title>
    <link href="https://hubertwongcn.github.io/posts/9381.html"/>
    <id>https://hubertwongcn.github.io/posts/9381.html</id>
    <published>2023-12-30T11:30:40.000Z</published>
    <updated>2023-12-30T11:30:40.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最为常见的是代码中使用很多的if/else，或者switch/case；如何重构呢？方法特别多，本文带你学习其中的技巧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;出现if-else和switch-case的场景&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="重构" scheme="https://hubertwongcn.github.io/categories/%E9%87%8D%E6%9E%84/"/>
    
    
    <category term="重构" scheme="https://hubertwongcn.github.io/tags/%E9%87%8D%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>2.CRON表达式 - CRON生成和校验工具</title>
    <link href="https://hubertwongcn.github.io/posts/14746.html"/>
    <id>https://hubertwongcn.github.io/posts/14746.html</id>
    <published>2023-12-30T11:21:11.000Z</published>
    <updated>2023-12-30T11:21:11.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要总结常用的在线CRON生成和校验工具，从而高效的写出正确的表达式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;CRON生成和校验工具&quot;&gt;&lt;a href=&quot;#CRON生成和校验工具&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="CRON表达式" scheme="https://hubertwongcn.github.io/categories/CRON%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
    <category term="CRON表达式" scheme="https://hubertwongcn.github.io/tags/CRON%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>1.CRON表达式 - CRON表达式介绍和使用</title>
    <link href="https://hubertwongcn.github.io/posts/52657.html"/>
    <id>https://hubertwongcn.github.io/posts/52657.html</id>
    <published>2023-12-30T11:19:56.000Z</published>
    <updated>2023-12-30T11:19:56.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;定时任务和CRON表达式在开发中使用也非常广泛，本文整理了CRON表达式和常见使用例子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是Cron&quot;&gt;&lt;a href=&quot;#什么是Cron&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="CRON表达式" scheme="https://hubertwongcn.github.io/categories/CRON%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
    <category term="CRON表达式" scheme="https://hubertwongcn.github.io/tags/CRON%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>3.正则表达式 - 在线工具汇总</title>
    <link href="https://hubertwongcn.github.io/posts/61717.html"/>
    <id>https://hubertwongcn.github.io/posts/61717.html</id>
    <published>2023-12-30T11:07:39.000Z</published>
    <updated>2023-12-30T11:07:39.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要总结常用的在线正则表达式相关的工具，从而高效的写出正确的表达式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;工具一：可视化理解正则&quot;&gt;&lt;a href=&quot;#工具一：可视化理解正则&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="正则表达式" scheme="https://hubertwongcn.github.io/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
    <category term="正则表达式" scheme="https://hubertwongcn.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
</feed>
