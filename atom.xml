<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hubert&#39;s Blog</title>
  
  <subtitle> Hubert爱猫爱生活</subtitle>
  <link href="https://hubertwongcn.github.io/atom.xml" rel="self"/>
  
  <link href="https://hubertwongcn.github.io/"/>
  <updated>2024-01-09T20:35:45.000Z</updated>
  <id>https://hubertwongcn.github.io/</id>
  
  <author>
    <name>Hubert Wong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>8.腾讯: 企业微信万亿级日志检索系统</title>
    <link href="https://hubertwongcn.github.io/posts/9921.html"/>
    <id>https://hubertwongcn.github.io/posts/9921.html</id>
    <published>2024-01-09T20:35:45.000Z</published>
    <updated>2024-01-09T20:35:45.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在日常工作中，通常需要存储一些日志，譬如用户请求的出入参、系统运行时打印的一些info、error之类的日志，从而对系统在运行时出现的问题有排查的依据。日志存储和检索是个很常见且简单的工作，市面也有很多关于日志搜集、存储、检索的框架可供使用。譬如在</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="日志系统" scheme="https://hubertwongcn.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>7.携程: 日均TB级数据，携程支付统一日志框架</title>
    <link href="https://hubertwongcn.github.io/posts/39905.html"/>
    <id>https://hubertwongcn.github.io/posts/39905.html</id>
    <published>2024-01-09T20:32:52.000Z</published>
    <updated>2024-01-09T20:32:52.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在日常工作中，通常需要存储一些日志，譬如用户请求的出入参、系统运行时打印的一些info、error之类的日志，从而对系统在运行时出现的问题有排查的依据。日志存储和检索是个很常见且简单的工作，市面也有很多关于日志搜集、存储、检索的框架可供使用。譬如在</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="日志系统" scheme="https://hubertwongcn.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>6.美团: 如何优雅地记录操作日志？</title>
    <link href="https://hubertwongcn.github.io/posts/2411.html"/>
    <id>https://hubertwongcn.github.io/posts/2411.html</id>
    <published>2024-01-09T20:29:18.000Z</published>
    <updated>2024-01-09T20:29:18.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;操作日志几乎存在于每个系统中，而这些系统都有记录操作日志的一套</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="日志系统" scheme="https://hubertwongcn.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>5.京东: 秒级百G日志传输存储架构设计与实战</title>
    <link href="https://hubertwongcn.github.io/posts/63270.html"/>
    <id>https://hubertwongcn.github.io/posts/63270.html</id>
    <published>2024-01-09T20:26:31.000Z</published>
    <updated>2024-01-09T20:26:31.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在日常工作中，通常需要存储一些日志，譬如用户请求的出入参、系统运行时打印的一些info、error之类的日志，从而对系统在运行时出现的问题有排查的依据。日志存储和检索是个很常见且简单的工作，市面也有很多关于日志搜集、存储、检索的框架可供使用。譬如在</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="日志系统" scheme="https://hubertwongcn.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>4.美团: 日志导致线程Block的这些坑，你不得不防</title>
    <link href="https://hubertwongcn.github.io/posts/36434.html"/>
    <id>https://hubertwongcn.github.io/posts/36434.html</id>
    <published>2024-01-09T20:18:40.000Z</published>
    <updated>2024-01-09T20:18:40.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;日志导致线程Block的问题，相信你或许已经遇到过，对此应该深有体会；或许你还没遇到过，但不代表没有问题，只是可能还没有触发而已。关于日志框架（日志门面）建议先理解下这篇&lt;a</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="日志系统" scheme="https://hubertwongcn.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>3.美团: 可视化全链路日志追踪</title>
    <link href="https://hubertwongcn.github.io/posts/49014.html"/>
    <id>https://hubertwongcn.github.io/posts/49014.html</id>
    <published>2024-01-09T20:14:26.000Z</published>
    <updated>2024-01-09T20:14:26.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;目前在分布式场景下，业务追踪的主流实现方式包括两类，一类是基于日志的ELK方案，一类是基于单次请求调用的会话跟踪方案。然而随着业务逻辑的日益复杂，上述方案越来越不适用于当下的业务系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="日志系统" scheme="https://hubertwongcn.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="全链路日志追踪" scheme="https://hubertwongcn.github.io/tags/%E5%85%A8%E9%93%BE%E8%B7%AF%E6%97%A5%E5%BF%97%E8%BF%BD%E8%B8%AA/"/>
    
  </entry>
  
  <entry>
    <title>2.vivo: 大数据日志采集Agent设计实践</title>
    <link href="https://hubertwongcn.github.io/posts/33085.html"/>
    <id>https://hubertwongcn.github.io/posts/33085.html</id>
    <published>2024-01-09T20:11:08.000Z</published>
    <updated>2024-01-09T20:11:08.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在企业大数据体系建设过程中，数据采集是其中的首要环节。然而，当前行业内的相关开源数据采集组件，并无法满足企业大规模数据采集的需求与有效的数据采集治理，所以大部分企业都采用自研开发采集组件的方式。本文通过在vivo的日志采集服务的设计实践经验，为大家</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="日志系统" scheme="https://hubertwongcn.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="Agent" scheme="https://hubertwongcn.github.io/tags/Agent/"/>
    
  </entry>
  
  <entry>
    <title>1.美团: 高性能终端实时日志系统建设实践</title>
    <link href="https://hubertwongcn.github.io/posts/3605.html"/>
    <id>https://hubertwongcn.github.io/posts/3605.html</id>
    <published>2024-01-09T20:07:31.000Z</published>
    <updated>2024-01-09T20:07:31.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Logan 是美团面向终端的统一日志服务，已支持移动端App、Web、小程序、IoT等多端环境，具备日志采集、存储、上传、查询与分析等能力，帮助用户定位研发问题，提升故障排查效率。同时，Logan</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="日志系统" scheme="https://hubertwongcn.github.io/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="Logan" scheme="https://hubertwongcn.github.io/tags/Logan/"/>
    
  </entry>
  
  <entry>
    <title>9.【综合/其它】美团-外卖客户端高可用建设体系</title>
    <link href="https://hubertwongcn.github.io/posts/42172.html"/>
    <id>https://hubertwongcn.github.io/posts/42172.html</id>
    <published>2024-01-09T19:50:16.000Z</published>
    <updated>2024-01-09T19:50:16.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;美团外卖从2013年11月开始起步，经过数年的高速发展，一直在不断地刷新着记录。2018年5月19日，日订单量峰值突破2000万单，已经成为全球规模最大的外卖平台。业务的快速发展对系统稳定性提出了更高的要求，如何为线上用户提供高稳定的服务体验，保障</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>8.【仓储物流】美团-即时物流的分布式系统架构设计</title>
    <link href="https://hubertwongcn.github.io/posts/9855.html"/>
    <id>https://hubertwongcn.github.io/posts/9855.html</id>
    <published>2024-01-09T19:47:58.000Z</published>
    <updated>2024-01-09T19:47:58.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;美团外卖已经发展了五年，即时物流探索也经历了3年多的时间，业务从零孵化到初具规模，在整个过程中积累了一些分布式高并发系统的建设经验。文主要介绍在美团即时物流分布式系统架构逐层演变的进展中，遇到的技术障碍和挑战。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="仓储物流" scheme="https://hubertwongcn.github.io/tags/%E4%BB%93%E5%82%A8%E7%89%A9%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>7.【仓储物流】美团-配送系统架构演进实践</title>
    <link href="https://hubertwongcn.github.io/posts/50599.html"/>
    <id>https://hubertwongcn.github.io/posts/50599.html</id>
    <published>2024-01-09T19:44:56.000Z</published>
    <updated>2024-01-09T19:44:56.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;美团配送自成立以来，业务经历了多次跨越式的发展。业务的飞速增长，对系统的整体架构和基础设施提出了越来越高的要求，同时也不断驱动着技术团队深刻理解业务、准确定位领域模型、高效支撑系统扩展。如何在业务高速增长、可用性越来越高的背景下实现系统架构的快速有</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="仓储物流" scheme="https://hubertwongcn.github.io/tags/%E4%BB%93%E5%82%A8%E7%89%A9%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>6.【综合/其它】闲鱼-复杂搜索系统的可靠性优化之路</title>
    <link href="https://hubertwongcn.github.io/posts/9298.html"/>
    <id>https://hubertwongcn.github.io/posts/9298.html</id>
    <published>2024-01-09T19:42:23.000Z</published>
    <updated>2024-01-09T19:42:23.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;搜索引擎是电商平台成交链路的核心环节，搜索引擎的高可用直接影响成交效率。闲鱼搜索引擎作为闲鱼关键系统，复杂度和系统体量都非常高，再加上闲鱼所有导购场景都依靠搜索赋能，搜索服务的稳定可靠成为了闲鱼大部分业务场景可用能力的衡量标准；如何保障搜索服务的稳</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="复杂搜索系统" scheme="https://hubertwongcn.github.io/tags/%E5%A4%8D%E6%9D%82%E6%90%9C%E7%B4%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>5.【拉新投放】闲鱼-拉新投放系统如何设计</title>
    <link href="https://hubertwongcn.github.io/posts/6168.html"/>
    <id>https://hubertwongcn.github.io/posts/6168.html</id>
    <published>2024-01-09T19:40:12.000Z</published>
    <updated>2024-01-09T19:40:12.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;闲鱼目前已经是国内最大的闲置物品交易平台。随着闲鱼体量的增长和用户规模不断扩大，闲鱼App上的一个普通banner抑或是feeds中的一张普通的卡片，每天都可能被数以千万计的人看到。为了更好地服务好广大的用户群体，更加个性化的内容推荐和更加精细化的</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="拉新投放" scheme="https://hubertwongcn.github.io/tags/%E6%8B%89%E6%96%B0%E6%8A%95%E6%94%BE/"/>
    
  </entry>
  
  <entry>
    <title>4.【电商交易】闲鱼-多状态多操作的交易链路架构演进</title>
    <link href="https://hubertwongcn.github.io/posts/53429.html"/>
    <id>https://hubertwongcn.github.io/posts/53429.html</id>
    <published>2024-01-09T19:36:08.000Z</published>
    <updated>2024-01-09T19:36:08.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;双十一刚刚结束，成交额2684亿震惊全世界，每秒订单峰值达54.4W笔。在闲鱼2000万DAU，交易数额同样增长迅速的今天，我们如何保障交易链路的稳定与快速支撑业务?</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="电商交易" scheme="https://hubertwongcn.github.io/tags/%E7%94%B5%E5%95%86%E4%BA%A4%E6%98%93/"/>
    
  </entry>
  
  <entry>
    <title>3.【电商交易】闲鱼-亿级商品结构化背后的思考和演进</title>
    <link href="https://hubertwongcn.github.io/posts/47144.html"/>
    <id>https://hubertwongcn.github.io/posts/47144.html</id>
    <published>2024-01-09T19:33:29.000Z</published>
    <updated>2024-01-09T19:33:29.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;闲鱼是一个典型的C2C场景的闲置交易平台，每个在闲鱼的用户都能享受到自由交易的乐趣，只要简单的输入商品名，商品价格，库存等信息就能完成一个商品的发布。充分的自由是闲鱼活力的来源，但是这对于一个电商平台来说是一个挑战。本文要说的商品结构化就是痛点之一</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="电商交易" scheme="https://hubertwongcn.github.io/tags/%E7%94%B5%E5%95%86%E4%BA%A4%E6%98%93/"/>
    
  </entry>
  
  <entry>
    <title>2.【电商交易】京东-亿级商品详情页设计</title>
    <link href="https://hubertwongcn.github.io/posts/35591.html"/>
    <id>https://hubertwongcn.github.io/posts/35591.html</id>
    <published>2024-01-09T19:27:22.000Z</published>
    <updated>2024-01-09T19:27:22.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;商品详情页是展示商品详细信息的一个页面，承载在网站的大部分流量和订单的入口。京东商城目前有通用版、全球购、闪购、易车、惠买车、服装、拼购、今日抄底等许多套模板。各套模板的元数据是一样的，只是展示方式不一样。目前商品详情页个性化需求非常多，数据来源也</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="电商交易" scheme="https://hubertwongcn.github.io/tags/%E7%94%B5%E5%95%86%E4%BA%A4%E6%98%93/"/>
    
  </entry>
  
  <entry>
    <title>1.系统设计之商业业务平台设计</title>
    <link href="https://hubertwongcn.github.io/posts/28387.html"/>
    <id>https://hubertwongcn.github.io/posts/28387.html</id>
    <published>2024-01-09T19:12:42.000Z</published>
    <updated>2024-01-09T19:12:42.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;分享系统设计之商业业务平台设计相关文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;相关文章&quot;&gt;&lt;a href=&quot;#相关文章&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统设计" scheme="https://hubertwongcn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="商业业务平台设计" scheme="https://hubertwongcn.github.io/tags/%E5%95%86%E4%B8%9A%E4%B8%9A%E5%8A%A1%E5%B9%B3%E5%8F%B0%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>走出微服务误区：避免从单体到分布式单体</title>
    <link href="https://hubertwongcn.github.io/posts/37344.html"/>
    <id>https://hubertwongcn.github.io/posts/37344.html</id>
    <published>2024-01-09T19:00:05.000Z</published>
    <updated>2024-01-09T19:00:05.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近社区频繁出现的对微服务的各种质疑和反思的声音，甚至放弃微服务回归单体。本文从“分布式单体”问题出发，介绍通过引入非侵入式方案和引入Event/EDA</summary>
        
      
    
    
    
    <category term="微服务" scheme="https://hubertwongcn.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="微服务" scheme="https://hubertwongcn.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>11.分布式系统 - 分布式系统的8个谬误</title>
    <link href="https://hubertwongcn.github.io/posts/5228.html"/>
    <id>https://hubertwongcn.github.io/posts/5228.html</id>
    <published>2024-01-09T18:34:57.000Z</published>
    <updated>2024-01-09T18:34:57.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;20多年前，Peter Deutsch和James</summary>
        
      
    
    
    
    <category term="分布式系统" scheme="https://hubertwongcn.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="分布式系统" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>10.分布式系统 - 分布式计算详解</title>
    <link href="https://hubertwongcn.github.io/posts/36449.html"/>
    <id>https://hubertwongcn.github.io/posts/36449.html</id>
    <published>2024-01-09T18:33:18.000Z</published>
    <updated>2024-01-09T18:33:18.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;传统的并行计算要的是：投入更多机器，数据大小不变，计算速度更快。 分布式计算要求：投入更多的机器，能处理更大的数据。&lt;/p&gt;
&lt;p&gt;作者：张建国 链接：&lt;a</summary>
        
      
    
    
    
    <category term="分布式系统" scheme="https://hubertwongcn.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="分布式系统" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="分布式计算" scheme="https://hubertwongcn.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
</feed>
